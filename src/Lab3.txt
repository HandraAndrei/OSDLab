diff --git a/postbuild/paths.cmd b/postbuild/paths.cmd
index cec924b..ade0507 100644
--- a/postbuild/paths.cmd
+++ b/postbuild/paths.cmd
@@ -12,6 +12,7 @@ set PATH_TO_VM_DISK=__EMPTY__
 set PATH_TO_VM_TOOLS=__EMPTY__
 set VOL_MOUNT_LETTER=__EMPTY__
 
+if _%COMPUTERNAME%_==_DESKTOP-6K9VMO8_ goto config_DESKTOP-6K9VMO8
 if _%COMPUTERNAME%_==_AGURZOU-DEV-PC_ goto config_AGURZOU-DEV
 if _%COMPUTERNAME%_==_ALEX-PC_ goto config_ALEX-PC
 if _%COMPUTERNAME%_==_AGURZOU-LPT_ goto config_AGURZOU-LPT
@@ -69,4 +70,13 @@ set BOCHS_PATH="c:\Program Files (x86)\Bochs-2.6.8\"
 
 goto end
 
+:config_DESKTOP-6K9VMO8
+
+SET PATH_TO_VIX_TOOLS="C:\Program Files (x86)\VMware\VMware VIX"
+SET PXE_PATH="D:\faculta\Anul IV\Semestrul I\OSD\Labs\Lab Materials\HAL9000folder-20221007\HAL9000\PXE"
+SET PATH_TO_VM_FILE="D:\faculta\Anul IV\Semestrul I\OSD\Labs\Lab Materials\HAL9000folder-20221007\HAL9000\VM\HAL9000_VM\HAL9000.vmx"
+SET PATH_TO_LOG_FILE="D:\faculta\Anul IV\Semestrul I\OSD\Labs\Lab Materials\HAL9000folder-20221007\HAL9000\VM\HAL9000_VM\HAL9000.log"
+SET PATH_TO_VM_DISK="D:\faculta\Anul IV\Semestrul I\OSD\Labs\Lab Materials\HAL9000folder-20221007\HAL9000\VM\HAL9000_VM\HAL9000.vmdk"
+goto end
+
 :end
\ No newline at end of file
diff --git a/src/HAL9000/headers/thread_internal.h b/src/HAL9000/headers/thread_internal.h
index be2588a..c5c6948 100644
--- a/src/HAL9000/headers/thread_internal.h
+++ b/src/HAL9000/headers/thread_internal.h
@@ -282,3 +282,5 @@ void
 ThreadSetPriority(
     IN      THREAD_PRIORITY     NewPriority
     );
+
+int getNrOfThreads();
\ No newline at end of file
diff --git a/src/HAL9000/src/Entry64.c b/src/HAL9000/src/Entry64.c
index a7810ff..98b703d 100644
--- a/src/HAL9000/src/Entry64.c
+++ b/src/HAL9000/src/Entry64.c
@@ -58,6 +58,8 @@ Entry64(
     DumpParameters(argv);
 
     status = SystemInit(argv);
+    LogSetLevel(LogLevelTrace);
+    LogSetTracedComponents(LogComponentThread);
     ASSERT(SUCCEEDED(status));
 
     LOGL("InitSystem executed successfully\n");
diff --git a/src/HAL9000/src/cmd_thread_helper.c b/src/HAL9000/src/cmd_thread_helper.c
index f794c95..d85c26c 100644
--- a/src/HAL9000/src/cmd_thread_helper.c
+++ b/src/HAL9000/src/cmd_thread_helper.c
@@ -128,7 +128,7 @@ void
     STATUS status;
 
     ASSERT(NumberOfParameters == 0);
-
+    LOG("Nr of Threads: %d", getNrOfThreads());
     LOG("%7s", "TID|");
     LOG("%20s", "Name|");
     LOG("%5s", "Prio|");
diff --git a/src/HAL9000/src/system.c b/src/HAL9000/src/system.c
index b0b436e..efc7155 100644
--- a/src/HAL9000/src/system.c
+++ b/src/HAL9000/src/system.c
@@ -70,7 +70,7 @@ SystemInit(
     status = STATUS_SUCCESS;
     pCpu = NULL;
 
-    LogSystemInit(LogLevelInfo,
+    LogSystemInit(LogLevelError,
                   LogComponentInterrupt | LogComponentIo | LogComponentAcpi,
                   TRUE
                   );
@@ -247,6 +247,7 @@ SystemInit(
     LOGL("Successfully intiialized system process!\n");
 
     status = ThreadSystemInitIdleForCurrentCPU();
+    LogSetLevel(LogLevelInfo);
     if (!SUCCEEDED(status))
     {
         LOG_FUNC_ERROR("ThreadSystemInitIdleForCurrentCPU", status);
diff --git a/src/HAL9000/src/thread.c b/src/HAL9000/src/thread.c
index b311f0c..0e9a004 100644
--- a/src/HAL9000/src/thread.c
+++ b/src/HAL9000/src/thread.c
@@ -10,7 +10,7 @@
 #include "gdtmu.h"
 #include "pe_exports.h"
 
-#define TID_INCREMENT               4
+#define TID_INCREMENT               10
 
 #define THREAD_TIME_SLICE           1
 
@@ -32,6 +32,8 @@ typedef struct _THREAD_SYSTEM_DATA
     _Guarded_by_(AllThreadsLock)
     LIST_ENTRY          AllThreadsList;
 
+    int                 nrOfThreads;
+
     LOCK                ReadyThreadsLock;
 
     _Guarded_by_(ReadyThreadsLock)
@@ -121,6 +123,7 @@ _ThreadDereference(
     INOUT   PTHREAD                 Thread
     );
 
+
 static FUNC_FreeFunction            _ThreadDestroy;
 
 static
@@ -142,7 +145,7 @@ ThreadSystemPreinit(
 
     InitializeListHead(&m_threadSystemData.AllThreadsList);
     LockInit(&m_threadSystemData.AllThreadsLock);
-
+    m_threadSystemData.nrOfThreads = 0;
     InitializeListHead(&m_threadSystemData.ReadyThreadsList);
     LockInit(&m_threadSystemData.ReadyThreadsLock);
 }
@@ -169,7 +172,8 @@ ThreadSystemInitMainForCurrentCPU(
 
     snprintf( mainThreadName, MAX_PATH, "%s-%02x", "main", pCpu->ApicId );
 
-    status = _ThreadInit(mainThreadName, ThreadPriorityDefault, &pThread, FALSE);
+    //status = _ThreadInit(mainThreadName, ThreadPriorityDefault, &pThread, FALSE);
+    status = _ThreadInit(mainThreadName, ThreadPriorityDefault, NULL, FALSE);
     if (!SUCCEEDED(status))
     {
         LOG_FUNC_ERROR("_ThreadInit", status );
@@ -642,6 +646,9 @@ ThreadGetId(
 
     return (NULL != pThread) ? pThread->Id : 0;
 }
+int getNrOfThreads() {
+    return m_threadSystemData.nrOfThreads;
+}
 
 THREAD_PRIORITY
 ThreadGetPriority(
@@ -729,7 +736,7 @@ _ThreadInit(
     LOG_FUNC_START;
 
     ASSERT(NULL != Name);
-    ASSERT(NULL != Thread);
+    //ASSERT(NULL != Thread);
     ASSERT_INFO(ThreadPriorityLowest <= Priority && Priority <= ThreadPriorityMaximum,
                 "Priority is 0x%x\n", Priority);
 
@@ -798,6 +805,7 @@ _ThreadInit(
 
         LockAcquire(&m_threadSystemData.AllThreadsLock, &oldIntrState);
         InsertTailList(&m_threadSystemData.AllThreadsList, &pThread->AllList);
+        m_threadSystemData.nrOfThreads++;
         LockRelease(&m_threadSystemData.AllThreadsLock, oldIntrState);
     }
     __finally
@@ -810,7 +818,7 @@ _ThreadInit(
                 pThread = NULL;
             }
         }
-
+        LOG("Thread with id 0x%X and name %s was created", pThread->Id, pThread->Name);
         *Thread = pThread;
 
         LOG_FUNC_END;
@@ -1187,8 +1195,11 @@ _ThreadDestroy(
     ASSERT(NULL != pThread);
     ASSERT(NULL == Context);
 
+    LOG("Thread with id 0x%X and name %s was finished", pThread->Id, pThread->Name);
+
     LockAcquire(&m_threadSystemData.AllThreadsLock, &oldState);
     RemoveEntryList(&pThread->AllList);
+    m_threadSystemData.nrOfThreads--;
     LockRelease(&m_threadSystemData.AllThreadsLock, oldState);
 
     // This must be done before removing the thread from the process list, else
